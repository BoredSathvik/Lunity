#include "UpdateHook.h"

auto __fastcall UpdateHook::clientInstanceCallback_1_17_2_1(uintptr_t theInstance, char param_2) -> int {
    Utils::SetClientInstance(theInstance);

    return PLH::FnCast(funcOriginal, &clientInstanceCallback_1_17_2_1)(theInstance, param_2);
}

UpdateHook::UpdateHook() : IPatch::IPatch("ClientInstance::Update") {
	//Ok I get it, this system is heap hell.
	//I just dont want objects getting destroyed
	this->AddSignature(new SigInfo(new std::string("89 ?? ?? ?? ?? 89 ?? ?? ?? ?? 89 ?? ?? ?? 55 41 ?? 41 ?? 41 ?? 41 ?? 48 ?? ?? ?? ?? ?? ?? ?? 48 81 ?? ?? ?? ?? ?? 48 8B ?? ?? ?? ?? ?? 48 33 ?? ?? 89 ?? ?? ?? ?? ?? 44 0F ?? ?? 48 8B ?? 45 33 ?? ?? 89 ?? ?? ?? ?? 81"), -1)); //1.17.30.4
	this->AddSignature(new SigInfo(new std::string("89 ?? ?? ?? ?? 89 ?? ?? ?? ?? 89 ?? ?? ?? 55 41 ?? 41 ?? 41 ?? 41 ?? 48 ?? ?? ?? ?? ?? ?? ?? 48 81 ?? ?? ?? ?? ?? 48 8B ?? ?? ?? ?? ?? 48 33 ?? ?? 89 ?? ?? ?? ?? ?? 44 0F ?? ?? 48 8B ?? 45"), -1)); //1.17.11.1
	this->AddSignature(new SigInfo(new std::string("48 8B ?? 55 41 ?? 41 ?? 41 ?? 41 ?? 48 ?? ?? ?? ?? ?? ?? 48 81 ?? ?? ?? ?? ?? ?? C7 ?? ?? ?? ?? ?? ?? ?? 89 ?? ?? ?? 89 ?? ?? ?? 89 ?? ?? 48 8B ?? ?? ?? ?? ?? 48 33 ?? ?? 89 ?? ?? ?? ?? ?? 44 0F ?? ?? 48 8B ?? 45"), 0)); //1.16.40.2
}

auto UpdateHook::Apply() -> bool {
	return this->AutoPatch(clientInstanceCallback_1_17_2_1, &funcOriginal);
}